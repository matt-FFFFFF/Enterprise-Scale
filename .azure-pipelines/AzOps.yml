name: AzOps

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  ContainerRegistry: AzOpsRegistry
  ContainerImage: mattffffff/azopsado:v0.0.1
  GitHubEmail: noreply@azure.com
  DockerVersion: '19.03.11'
  GitHubUserName: AzOps
  AzOpsDebug: "false"
  AzOpsVerbose: "false"

jobs:
- job: push
  condition: and(eq(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.SourceBranch'], 'refs/heads/system'))
  variables:
    AzOpsMode: push
  steps:
    - checkout: self
      persistCredentials: true

    - task: PowerShell@2
      displayName: Set BASE and HEAD variables
      inputs:
        targetType: inline
        script: |
          $head = "$(System.PullRequest.SourceBranch)".Replace("refs/heads/","")
          $base = "$(System.PullRequest.TargetBranch)".Replace("refs/heads/","")
          Write-Output "##vso[task.setvariable variable=AzopsHeadBranch;]$head"
          Write-Output "##vso[task.setvariable variable=AzopsBaseBranch;]$base"
    
    - template: steps/AzOps-CommonSteps.yml

  # If you want review before triggering the push event, enable push_with_review block and disable push.
  # Review will require, someone other than the creator or the PR to complete review.
  # GitHub Action will run once PR is reviewed with comment that contains  "LGTM". 
  # However, in order for GitHub Action status check to display in your PR, you have to enable branch access policy.
  #
  # push_with_review:
  #   if: ${{ github.head_ref != 'system' && contains(github.event.review.body, 'LGTM')}}
  #   name: Push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Actions checkout
  #       uses: actions/checkout@v2
  #     - name: GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Actions azops
  #       uses: Azure/AzOps@main
  #       with:
  #         azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  #         github_comments: ${{ github.event.pull_request._links.comments.href }}
  #         github_issue: ${{ github.event.pull_request._links.issue.href }}
  #         github_base_ref: ${{ github.event.pull_request.base.ref }}
  #         github_head_ref: ${{ github.event.pull_request.head.ref }}
  #         mode: push
  #         verbose: "true"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- job: pull
  condition: eq(variables['Build.Reason'], 'Manual')
  variables:
    AzOpsMode: pull
  steps:
    - checkout: self
      persistCredentials: true

    - template: steps/AzOps-CommonSteps.yml
